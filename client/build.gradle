plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
   // id 'info.solidsoft.pitest' version '1.7.4'
	id 'info.solidsoft.pitest' version '1.5.1'
	id "org.sonarqube" version "3.0"

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

ext {
	set('springBootAdminVersion', "2.7.4")
}

dependencies {
	compileOnly("org.projectlombok:lombok:1.16.10")
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation("org.mock-server:mockserver-netty-no-dependencies:5.14.0")
	// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
	//implementation 'org.seleniumhq.selenium:selenium-java:2.41.0'
	//implementation 'org.seleniumhq.selenium:selenium-java:4.6.0'
//implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.6.0'
	//https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-chrome-driver
	implementation 'org.seleniumhq.selenium:selenium-java:4.6.0'
	implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.6.0'
	//implementation 'org.seleniumhq.selenium:selenium-chrome-driver:2.23.0'
	// https://mvnrepository.com/artifact/junit/junit
testImplementation 'junit:junit:4.4'
	
	// testImplementation "com.squareup.okhttp3:mockwebserver:4.10.0"
	//implementation 'org.mock-server:mockserver-client-java:3.10.8'
	testImplementation("org.mock-server:mockserver-client-java-no-dependencies:5.14.0")
	implementation 'de.codecentric:spring-boot-admin-starter-client'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testCompile 'org.seleniumhq.selenium:selenium-chrome-driver:2.53.1'

	
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
implementation 'com.google.code.gson:gson:2.7'
	
	//testImplementation("com.squareup.okhttp3:mockwebserver:4.9.3")
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
test {
    useJUnitPlatform()
}
pitest {
	targetClasses = ['project.*']
	threads = 4
	junit5PluginVersion = '0.12'
	outputFormats = ['XML', 'HTML']
	timestampedReports = true
}
sonarqube {
	properties {
		property 'sonar.dependencyCheck.jsonReportPath', 'build/reports/dependency-check-report.json'
		property 'sonar.dependencyCheck.htmlReportPath', 'build/reports/dependency-check-report.html'
		properties["sonar.sources"] += "build.gradle"
	}

	sonarqube {
		properties {
			property 'sonar.host.url', 'https://sonarqube.host.com'
			property 'sonar.projectName', 'client'
			property 'sonar.java.source', 11
			property 'sonar.junit.reportPaths', 'build/results'
			property 'encoding', 'UTF-8'
			property 'charSet', 'UTF-8'
			property "sonar.coverage.jacoco.xmlReportPaths", "path.xml"
		}
	}
}
